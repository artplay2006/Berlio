@{
	ViewData["Title"] = "Кабинет";
	//ViewBag.ShowElectronicCardBalance = false;
}

@model BerlioWeb.Models.User

@section Scripts {
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
<script>
	// Изменяем свойство background-color у body
	document.body.style.backgroundColor = "DarkBlue";
	document.addEventListener("DOMContentLoaded", function () {
	const menuItems = document.querySelectorAll(".left-menu ul li");
	const contentItems = document.querySelectorAll(".content-item");

	menuItems.forEach(item => {
	item.addEventListener("click", function () {

	// Убираем активный класс у всех пунктов меню
	menuItems.forEach(li => li.classList.remove("active"));
	// Добавляем активный класс к выбранному пункту
	item.classList.add("active");

	// Скрываем все блоки контента
	contentItems.forEach(content => content.classList.remove("active"));

	// Показываем выбранный блок контента
	const contentId = item.getAttribute("data-content");
	document.getElementById(contentId).classList.add("active");
	document.getElementById("mesupdate").innerHTML = "";
	});
	});
	});
	/////////////////////////////////////////////////////////////////////////
	let globalBalanceType;
			document.getElementById('submitReplenish').addEventListener('click', function() {
			const form = document.getElementById('replenishForm');
			const inputs = form.querySelectorAll('input[required]');
			let isValid = true;

			// Сбросить предыдущие ошибки
			inputs.forEach(input => {
				input.classList.remove('is-invalid');
			});

			// Проверить каждое поле
			inputs.forEach(input => {
				if (!input.value.trim()) {
					input.classList.add('is-invalid');
					isValid = false;
				}

				// Дополнительные проверки
				if (input.id === 'cardNumber' && !/^\d{4}\s?\d{4}\s?\d{4}\s?\d{4}$/.test(input.value)) {
					input.classList.add('is-invalid');
					isValid = false;
				}

				if (input.id === 'expiryDate' && !/^\d{2}\/\d{2}$/.test(input.value)) {
					input.classList.add('is-invalid');
					isValid = false;
				}
			});

			if (!isValid) return;

			// Преобразуем дату в формат ISO
			const expiryDateStr = document.getElementById('expiryDate').value;
			const [month, year] = expiryDateStr.split('/');
			const expiryDate = new Date(`20${year}-${month}-01`).toISOString();

			// Собираем данные формы с правильными именами свойств
			const formData = {
				balanceType: globalBalanceType,
				amount: parseFloat(document.getElementById('amount').value),
				cardNumber: document.getElementById('cardNumber').value.replace(/\s/g, ''),
				expiryDate: expiryDate,
				cvv: parseInt(document.getElementById('cvv').value),
			};

			// Отправляем AJAX-запрос
			fetch('/Account/ReplenishBalance', {
				method: 'POST',
				headers: {
					'Content-Type': 'application/json',
					'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
				},
				body: JSON.stringify(formData)
			})
			.then(response => {
				if (!response.ok) throw new Error('Ошибка сети');
				return response.json();
			})
			.then(data => {
				if (data.success) {
					location.reload();
				} else {
					alert('Ошибка: ' + (data.message || 'Неизвестная ошибка'));
				}
			})
			.catch(error => {
				console.error('Ошибка:', error);
				alert('Произошла ошибка при отправке запроса');
			});
		});
	// Маска для номера карты
	document.getElementById('cardNumber').addEventListener('input', function(e) {
	this.value = this.value.replace(/\D/g, '')
	.replace(/(\d{4})(?=\d)/g, '$1 ');
	});

	// Маска для срока действия
	document.getElementById('expiryDate').addEventListener('input', function(e) {
	this.value = this.value.replace(/\D/g, '')
	.replace(/(\d{2})(?=\d)/g, '$1/')
	.substring(0, 5);
	});
	// Валидация при вводе
	document.querySelectorAll('#replenishForm input').forEach(input => {
	input.addEventListener('input', function() {
	if (this.value.trim()) {
	this.classList.remove('is-invalid');
	}

	// Специфические проверки
	if (this.id === 'cardNumber') {
	if (/^\d{4}\s?\d{4}\s?\d{4}\s?\d{4}$/.test(this.value)) {
	this.classList.remove('is-invalid');
	} else {
	this.classList.add('is-invalid');
	}
	}
	});
	});
</script>
}
<style>
	/* Стили для списка программ */
	.programs-list {
	display: grid;
	grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
	gap: 20px;
	margin-top: 20px;
	}

	.program-card {
	background: white;
	border-radius: 8px;
	box-shadow: 0 2px 10px rgba(0,0,0,0.1);
	overflow: hidden;
	display: flex;
	flex-direction: column;
	transition: transform 0.3s ease, box-shadow 0.3s ease;
	}

	.program-card:hover {
	transform: translateY(-5px);
	box-shadow: 0 5px 15px rgba(0,0,0,0.1);
	}

	.program-icon {
	background: #f5f5f5;
	text-align: center;
	padding: 20px;
	}

	.program-icon img {
	/* width: 80px; */
	height: 80px;
	object-fit: contain;
	}

	.program-info {
	padding: 15px;
	flex-grow: 1;
	}

	.program-info h3 {
	margin: 0 0 10px 0;
	color: #333;
	font-size: 1.2rem;
	}

	.program-description {
	color: #666;
	font-size: 0.9rem;
	margin-bottom: 15px;
	}

	.program-meta {
	display: flex;
	justify-content: space-between;
	font-size: 0.8rem;
	color: #888;
	}

	.program-actions {
	padding: 0 15px 15px 15px;
	text-align: center;
	}

	.download-btn {
	display: inline-block;
	background-color: #4CAF50;
	color: white;
	padding: 8px 15px;
	border-radius: 4px;
	text-decoration: none;
	transition: background-color 0.3s;
	}

	.download-btn:hover {
	background-color: #45a049;
	}

	.no-programs {
	text-align: center;
	padding: 40px 20px;
	grid-column: 1 / -1;
	}

	.no-programs i {
	font-size: 3rem;
	color: #ccc;
	margin-bottom: 15px;
	}

	.no-programs p {
	color: #666;
	margin-bottom: 20px;
	}

	@@media (max-width: 768px) {
	.programs-list {
	grid-template-columns: 1fr;
	}
	}
	/* Стили для списка оборудования */
	.equipments-list {
	display: grid;
	grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
	gap: 20px;
	margin-top: 20px;
	}

	.equipment-card {
	background: #fff;
	border-radius: 8px;
	box-shadow: 0 2px 10px rgba(0,0,0,0.08);
	overflow: hidden;
	display: flex;
	flex-direction: column;
	border-top: 3px solid #3a7bd5;
	}

	.equipment-icon {
	background: #f5f7fa;
	text-align: center;
	padding: 20px;
	border-bottom: 1px solid #eee;
	}

	.equipment-icon img {
	height: 80px;
	object-fit: contain;
	}

	.equipment-info {
	padding: 15px;
	flex-grow: 1;
	}

	.equipment-info h3 {
	margin: 0 0 10px 0;
	color: #2c3e50;
	font-size: 1.2rem;
	}

	.equipment-description {
	color: #555;
	font-size: 0.9rem;
	margin-bottom: 15px;
	line-height: 1.4;
	}

	.equipment-meta {
	font-size: 0.85rem;
	color: #666;
	margin-top: 10px;
	}

	.delivery-info, .address-info {
	margin-bottom: 8px;
	display: flex;
	align-items: center;
	}

	.delivery-info i, .address-info i {
	margin-right: 8px;
	color: #3a7bd5;
	width: 16px;
	text-align: center;
	}

	.equipment-status {
	padding: 12px 15px;
	text-align: center;
	background: #f9f9f9;
	border-top: 1px solid #eee;
	}

	.status-badge {
	display: inline-flex;
	align-items: center;
	padding: 6px 12px;
	border-radius: 20px;
	font-size: 0.85rem;
	font-weight: 500;
	}

	.status-badge.dоставлено {
	background-color: #2ecc71;
	color: white;
	}

	.status-badge.в-обработке {
	background-color: #f39c12;
	color: white;
	}

	.status-badge i {
	margin-left: 5px;
	}

	.no-equipments {
	text-align: center;
	padding: 40px 20px;
	grid-column: 1 / -1;
	background: #f9f9f9;
	border-radius: 8px;
	}

	.no-equipments i {
	font-size: 3rem;
	color: #bdc3c7;
	margin-bottom: 15px;
	}

	.no-equipments p {
	color: #7f8c8d;
	margin-bottom: 20px;
	}

	@@media (max-width: 768px) {
	.equipments-list {
	grid-template-columns: 1fr;
	}
	}
	/* Стили для блока балансов */
	.balances-container {
	display: grid;
	grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
	gap: 20px;
	margin: 30px 0;
	}

	.balance-card {
	background: white;
	border-radius: 10px;
	padding: 20px;
	box-shadow: 0 4px 12px rgba(0,0,0,0.05);
	border-top: 4px solid #3a7bd5;
	display: flex;
	flex-direction: column;
	}

	.balance-card.electronic {
	border-top-color: #6c5ce7;
	}

	.balance-header {
	display: flex;
	align-items: center;
	margin-bottom: 15px;
	}

	.balance-icon {
	width: 40px;
	height: 40px;
	background: #f0f7ff;
	border-radius: 50%;
	display: flex;
	align-items: center;
	justify-content: center;
	margin-right: 15px;
	color: #3a7bd5;
	font-size: 18px;
	}

	.balance-card.electronic .balance-icon {
	background: #f3f0ff;
	color: #6c5ce7;
	}

	.balance-header h3 {
	margin: 0;
	font-size: 1.2rem;
	color: #2c3e50;
	}

	.balance-amount {
	margin: 10px 0 20px;
	}

	.balance-amount span {
	font-size: 1.8rem;
	font-weight: 600;
	color: #2c3e50;
	}

	.btn-replenish {
	background: #3a7bd5;
	color: white;
	border: none;
	padding: 10px 15px;
	border-radius: 5px;
	cursor: pointer;
	font-weight: 500;
	transition: background 0.3s;
	margin-top: auto;
	}

	.balance-card.electronic .btn-replenish {
	background: #6c5ce7;
	}

	.btn-replenish:hover {
	background: #2c6ac8;
	}

	.balance-card.electronic .btn-replenish:hover {
	background: #5a4acf;
	}

	/* Стили для истории */
	.history-section {
	margin-top: 40px;
	}

	.history-section h3 {
	color: #2c3e50;
	margin-bottom: 20px;
	font-size: 1.3rem;
	}

	.history-table {
	background: white;
	border-radius: 10px;
	overflow: hidden;
	box-shadow: 0 4px 12px rgba(0,0,0,0.05);
	}

	.history-header {
	display: grid;
	grid-template-columns: 1.5fr 1fr 1.5fr 1fr;
	background: #f8f9fa;
	padding: 15px 20px;
	font-weight: 600;
	color: #495057;
	border-bottom: 1px solid #e9ecef;
	}

	.history-row {
	display: grid;
	grid-template-columns: 1.5fr 1fr 1.5fr 1fr;
	padding: 12px 20px;
	border-bottom: 1px solid #e9ecef;
	}

	.history-row:last-child {
	border-bottom: none;
	}

	.history-cell {
	display: flex;
	align-items: center;
	}

	.history-cell.success {
	color: #2ecc71;
	}

	.history-cell.pending {
	color: #f39c12;
	}

	.history-cell.failed {
	color: #e74c3c;
	}

	.history-empty {
	padding: 30px;
	text-align: center;
	color: #7f8c8d;
	}

	.history-empty i {
	font-size: 2.5rem;
	margin-bottom: 15px;
	color: #bdc3c7;
	}

	.history-empty p {
	margin: 0;
	}

	/* Адаптивность */
	@@media (max-width: 768px) {
	.balances-container {
	grid-template-columns: 1fr;
	}

	.history-header, .history-row {
	grid-template-columns: 1fr 1fr;
	}

	.history-cell:nth-child(3), .history-cell:nth-child(4) {
	display: none;
	}
	}
	/* Добавьте эти стили в ваш <style> блок */
		.modal {
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		display: flex;
		align-items: center;
		justify-content: center;
		background-color: rgba(0, 0, 0, 0.5);
		z-index: 1050; /* Убедитесь, что это значение выше, чем у затемнения */
		opacity: 0;
		visibility: hidden;
		transition: all 0.1s ease;
		}

		.modal.show {
		opacity: 1;
		visibility: visible;
		}

		.modal-dialog {
		position: relative;
		width: auto;
		max-width: 500px;
		margin: 0.5rem;
		z-index: 1051; /* Выше чем фон */
		}

		.modal-content {
		position: relative;
		background-color: #fff;
		border: none;
		border-radius: 10px;
		box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
		}

		.modal-backdrop {
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background-color: rgba(0, 0, 0, 0.5);
		z-index: 1040; /* Ниже модального окна */
		}

		.is-invalid {
		border-color: #dc3545 !important;
		}

		.invalid-feedback {
		display: none;
		width: 100%;
		margin-top: 0.25rem;
		font-size: 0.875em;
		color: #dc3545;
		}

		.is-invalid ~ .invalid-feedback {
		display: block;
		}
	</style>
	<header style="background-color:DarkBlue">
		<div class="header-top" style="margin: 3vh 0 3vh 0vw;">
			<a style="text-decoration: none;
    color: inherit;    border: white solid 1px;
    border-radius: 10px;
    padding: 10px;" asp-area="" asp-controller="Account" asp-action="Personal"><h3 style="color:white">Личный кабинет</h3></a>
			<a style="text-decoration: none;
    color: inherit;" asp-area="" asp-controller="" asp-action="">
				<div class="header-account dropdown" style="border: white solid 1px;
    border-radius: 10px;
    padding: 10px 0;">
					<div class="dropdown">
						<img src="~/images/account.png" class="account" style="margin: 0vh 0 0vh 0vw;padding-left:1vw;">
						<b style="margin-bottom: 0; color:white;padding-left:1vw;padding-right: 1vw;">@Model.Login</b>
						<p style="color:white;margin-bottom: 0;margin-top:0.13vw;
    margin-left: 50%;">▼</p>
						<ul class="dropdown-menu">
							<li><a class="dropdown-item" asp-controller="Home" asp-action="Index">Главная</a></li>
							<li>
								<form asp-controller="Account" asp-action="Logout" method="post">
									@Html.AntiForgeryToken()
									<button type="submit" class="dropdown-item" style="background:none; border:none; width:100%; text-align:left">
										Выйти из акк
									</button>
								</form>
							</li>
						</ul>
					</div>
				</div>
			</a>
		</div>
	</header>
	<div class="allinpersonal">
		<div class="left-menu">
			<ul>
				<li data-content="settings" class="active">Настройки пользователя</li>
				<li data-content="balances">Балансы</li>
				<li data-content="equipments">Оборудование</li>
				<li data-content="programs">Программы</li>
			</ul>
		</div>
		<!-- Контент -->
		<div class="content">
			<div id="settings" class="content-item active">
				<h2>Настройки пользователя</h2>
				<p>Здесь вы можете изменить свои настройки.</p>
				<form method="post" action="/Account/UpdateUserSettings">
					<div class="form-group">
						<label asp-for="Login"></label>
						<input asp-for="Login" class="form-control" readonly />
						<span asp-validation-for="Login" class="text-danger"></span>
					</div>

					<div class="form-group">
						<label asp-for="Password"></label>
						<input asp-for="Password" type="password" class="form-control" value="@Model.Password" />
						<span asp-validation-for="Password" class="text-danger"></span>
					</div>

					<div class="form-group">
						<label asp-for="Email"></label>
						<input asp-for="Email" class="form-control" />
						<span asp-validation-for="Email" class="text-danger"></span>
					</div>

					<div class="form-group">
						<label asp-for="Telephone"></label>
						<input asp-for="Telephone" class="form-control" />
						<span asp-validation-for="Telephone" class="text-danger"></span>
					</div>

					<div class="form-group">
						<label asp-for="ContractNumber"></label>
						<input asp-for="ContractNumber" class="form-control" />
						<span asp-validation-for="ContractNumber" class="text-danger"></span>
					</div>

					<div class="form-group">
						<label asp-for="PlaceOfTheContract"></label>
						<select asp-for="PlaceOfTheContract" class="form-select">
							<option value="Берлио Минск (центр 6910)">Берлио Минск (центр 6910)</option>
							<option value="СООО «Юнайтед-Компани» (центр 6913)">СООО «Юнайтед-Компани» (центр 6913)</option>
							<option value="ГК «А-100 АЗС» (центр 6914)">ГК «А-100 АЗС» (центр 6914)</option>
							<option value="ГУ «БЕЛАВТОСТРАДА» (центр 6918)">ГУ «БЕЛАВТОСТРАДА» (центр 6918)</option>
							<option value="ИООО «ЛУКОЙЛ Белоруссия» (центр 6916)">ИООО "ЛУКОЙЛ Белоруссия" (центр 6916)</option>
							<option value="Экорес (центр 6927)">Экорес (центр 6927)</option>
							<option value="Нефтехимтрейдинг (центр 6928)">Нефтехимтрейдинг (центр 6928)</option>
							<option value="ИООО «Газпромнефть-Белнефтепродукт»">ИООО "Газпромнефть-Белнефтепродукт"</option>
							<option value="ИООО «РН-Запад» (Минск 6940)">ИООО "РН-Запад" (Минск 6940)</option>
							<option value="ИООО «ТАТБЕЛНЕФТЕПРОДУКТ»">ИООО "ТАТБЕЛНЕФТЕПРОДУКТ"</option>
							<option value="ИООО «РН-Запад» (Брест 2255)">ИООО "РН-Запад" (Брест 2255)</option>
							<option value="ИООО «РН-Запад» (Могилев 3003)">ИООО "РН-Запад" (Могилев 3003)</option>
							<option value="Берлио Витебск (центр 1010)">Берлио Витебск (центр 1010)</option>
							<option value="Берлио Брест (центр 2254)">Берлио Брест (центр 2254)</option>
							<option value="Берлио Гродно (центр 2314)">Берлио Гродно (центр 2314)</option>
							<option value="Берлио Могилев (центр 3000)">Берлио Могилев (центр 3000)</option>
							<option value="Берлио Гомель (центр 4010)">Берлио Гомель (центр 4010)</option>
							<option value="Польша (центр 5001)">Польша (центр 5001)</option>
							<option value="ООО «РосБерлио» (РФ) (центр 7000)">ООО «РосБерлио» (РФ) (центр 7000)</option>
							<option value="Киев (Украина) (центр 8100)">Киев (Украина) (центр 8100)</option>
							<option value="УП «Витебскоблгаз» ф-л ПУ «Полоцкгаз» (центр 1015)">УП «Витебскоблгаз» ф-л ПУ «Полоцкгаз» (центр 1015)</option>
							<option value="УП «Витебскоблгаз» ф-л ПУ «Витебскгаз» (центр 1017)">УП «Витебскоблгаз» ф-л ПУ «Витебскгаз» (центр 1017)</option>
							<option value="Новополоцкое ООО «Блок»">Новополоцкое ООО «Блок»</option>
							<option value="ГП «Брестский мусороперерабатывающий завод» (центр 2227)">ГП «Брестский мусороперерабатывающий завод» (центр 2227)</option>
							<option value="ЗАО «Медтехника» (центр 2248)">ЗАО «Медтехника» (центр 2248)</option>
							<option value="УП «Брестоблгаз» (центр 2250)">УП «Брестоблгаз» (центр 2250)</option>
							<option value="ОДО «ГаллонАвтоГаз» (центр 2257)">ОДО «ГаллонАвтоГаз» (центр 2257)</option>
							<option value="ООО «ДжиОйл» (центр 2258)">ООО «ДжиОйл» (центр 2258)</option>
							<option value="ООО «МНПЗ плюс»">ООО «МНПЗ плюс»</option>
							<option value="УП «Гомельоблгаз» ф-л ПУ «Гомельгаз» (центр 4020)">УП «Гомельоблгаз» ф-л ПУ «Гомельгаз» (центр 4020)</option>
							<option value="ООО «РОС-ВТС»">ООО «РОС-ВТС»</option>
						</select>
						<span asp-validation-for="PlaceOfTheContract" class="text-danger"></span>
					</div>

					<button type="submit" class="btn btn-primary">Сохранить изменения</button>
					@if (TempData["UpdateMessage"] != null)
					{
						<div id="mesupdate" style="text-align: right;
    border: none;
    background-color: transparent;
    color: black;
    font-size: 1.04vw;" class="alert alert-info">
							@TempData["UpdateMessage"]
						</div>
					}
				</form>
			</div>
			<div id="balances" class="content-item">
				<h2>Мои балансы</h2>
				@if (ViewBag.beltollService != null || ViewBag.elcardsService != null)
				{
				<div class="balances-container">
					<!-- Баланс BelToll -->
					@if (ViewBag.beltollService != null)
					{
						<div class="balance-card">
							<div class="balance-header">
								<div class="balance-icon">
									<i class="fas fa-road"></i>
								</div>
								<h3>@ViewBag.beltollService.Nameservice</h3>
							</div>
							<div class="balance-amount">
							<span>@ViewBag.beltollService.Balance.ToString("N2") BYN</span>
							</div>
							<button onclick="globalBalanceType='BelToll'" class="btn-replenish" data-bs-toggle="modal" data-bs-target="#replenishModal" data-balance-type="BelToll">
								Пополнить баланс
							</button>
						</div>
					}
					<!-- Баланс электронной карточки (условный) -->
					@if (ViewBag.elcardsService != null)
					{
					<div class="balance-card electronic">
						<div class="balance-header">
							<div class="balance-icon">
								<i class="fas fa-credit-card"></i>
							</div>
								<h3>@ViewBag.elcardsService.Nameservice</h3>
						</div>
						<div class="balance-amount">
							<span>@ViewBag.elcardsService.Balance.ToString("N2") BYN</span>
						</div>
							<button onclick="globalBalanceType='Электронные карточки'" class="btn-replenish" data-bs-toggle="modal" data-bs-target="#replenishModal" data-balance-type="ElectronicCard">
							Пополнить баланс
						</button>
					</div>
					}
				</div>

				<!-- История пополнений -->
				<div class="history-section">
					<h3>История пополнений</h3>
					<div class="history-table">
						<div class="history-header">
							<div class="history-cell">Дата</div>
							<div class="history-cell">Сумма</div>
							<div class="history-cell">Тип баланса</div>
						</div>
						@foreach (DepositHistory transaction in ViewBag.PaymentHistory ?? new List<DepositHistory>())
					{
						<div class="history-row">
							<div class="history-cell">@transaction.Timedeposit.ToString("dd.MM.yyyy HH:mm")</div>
							<div class="history-cell">@transaction.Sumofmoney.ToString("N2") BYN</div>
							<div class="history-cell">@transaction.TypeBalance</div>
						</div>
					}

					@if ((ViewBag.PaymentHistory?.Count ?? 0) == 0)
					{
						<div class="history-empty">
							<i class="fas fa-history"></i>
							<p>Нет истории пополнений</p>
						</div>
					}
				</div>
				</div>
				}
				else
				{
				<div class="no-equipments">
					<i class="fas fa-box-open"></i>
					<p>У вас пока нет балансов</p>
					<a href="/Service/payment-for-travel-on-toll-roads" class="btn btn-primary">Создать баланс BelToll</a>
					<a href="/Product/electronic-cards" class="btn btn-primary">Создать баланс для электронных карточек</a>
				</div>
				}
		</div>
		
		@* <div class="modal-backdrop fade" id="modalBackdrop" style="display: none;"></div> *@
		<!-- Модальное окно для пополнения -->
		<div class="modal fade" id="replenishModal" tabindex="-1" aria-hidden="true">
			<div class="modal-dialog">
				<div class="modal-content">
					<div class="modal-header">
						<h5 class="modal-title">Пополнение баланса</h5>
						<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
					</div>
					<div class="modal-body">
						<form id="replenishForm">
							<input type="hidden" id="balanceTypeInput" name="balanceType">
							<div class="form-group">
								<label for="amount">Сумма пополнения (BYN)</label>
								<input type="number" step="0.01" min="1" class="form-control" id="amount" name="amount" required>
								<div class="invalid-feedback">Пожалуйста, укажите сумму</div>
							</div>
							<div class="form-group">
								<label for="cardNumber">Номер карты</label>
								<input type="text" class="form-control" id="cardNumber" name="cardNumber"
									   placeholder="0000 0000 0000 0000" pattern="\d{4}\s?\d{4}\s?\d{4}\s?\d{4}" required>
								<div class="invalid-feedback">Введите корректный номер карты (16 цифр)</div>
							</div>
							<div class="form-row">
								<div class="form-group col-md-6">
									<label for="expiryDate">Срок действия</label>
									<input type="text" class="form-control" id="expiryDate" name="expiryDate" placeholder="MM/YY" required>
								</div>
								<div class="form-group col-md-6">
									<label for="cvv">CVV</label>
									<input type="text" class="form-control" id="cvv" name="cvv" placeholder="123" required>
								</div>
							</div>
						</form>
					</div>
					<div class="modal-footer">
						<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отмена</button>
						<button type="button" class="btn btn-primary" id="submitReplenish">Пополнить</button>
					</div>
				</div>
			</div>
		</div>
		<div id="equipments" class="content-item">
			<h2>Мое оборудование</h2>
			<div class="equipments-list">
				@foreach (var equipment in ViewBag.UserEquipments ?? new List<dynamic>())
				{
					<div class="equipment-card">
						<div class="equipment-icon">
							<img src="~/images/@(equipment.Image ?? "equipment.png")" alt="@equipment.Name">
						</div>
						<div class="equipment-info">
							<h3>@equipment.Name (x@(equipment.Count))</h3>
							<div class="equipment-description">
								@Html.Raw(equipment.ShortDescription?.Replace("\n", "<br>") ?? "Описание отсутствует")
							</div>
							<div class="equipment-meta">
								@if (equipment.TimeDelivery != null)
								{
									<div class="delivery-info">
										<i class="fas fa-truck"></i>
										<span>Доставка: @equipment.TimeDelivery.ToString("dd.MM.yyyy HH:mm")</span>
									</div>
									<div class="address-info">
										<i class="fas fa-map-marker-alt"></i>
										<span>@equipment.AddressDelivery</span>
									</div>
								}
								else
								{
									<div class="delivery-info">
										<i class="fas fa-clock"></i>
										<span>Дата доставки не назначена</span>
									</div>
								}
							</div>
						</div>
						<div class="equipment-status">
							<span class="status-badge @equipment.Status.ToLower().Replace(" ", "-")">
								@equipment.Status
								@if (equipment.Status == "Доставлено")
								{
									<i class="fas fa-check-circle"></i>
								}
								else if (equipment.Status == "В обработке")
								{
									<i class="fas fa-spinner fa-spin"></i>
								}
							</span>
						</div>
					</div>
				}

				@if ((ViewBag.UserEquipments?.Count ?? 0) == 0)
				{
					<div class="no-equipments">
						<i class="fas fa-box-open"></i>
						<p>У вас пока нет оборудования</p>
						<a href="/Category/Equipments" class="btn btn-primary">Посмотреть каталог</a>
					</div>
				}
			</div>
		</div>
		<div id="programs" class="content-item">
			<h2>Мои программы</h2>
			<div class="programs-list">
				@foreach (BerlioWeb.Models.Program program in ViewBag.UserPrograms ?? new List<Program>())
				{
					<div class="program-card">
						<div class="program-icon">
							<img src="~/images/@(program.Image ?? "equipments.png")" alt="@program.Name">
						</div>
						<div class="program-info">
							<h3>@program.Name</h3>
							<p class="program-description">@program.ShortDescription</p>
							<div class="program-meta">
								<span class="version">Версия: 2.2</span>
								<span class="date">Добавлено: 22.01.2025</span>
							</div>
						</div>
						<div class="program-actions">
							<a asp-area="" asp-controller="Product" asp-action="Download" asp-route-id="@program.Id" class="download-btn">
								<i class="fas fa-download">Скачать</i>
							</a>
						</div>
					</div>
				}

				@if ((ViewBag.UserPrograms?.Count ?? 0) == 0)
				{
					<div class="no-programs">
						<i class="fas fa-box-open"></i>
						<p>У вас пока нет доступных программ</p>
						<a href="/Category/Programs" class="btn btn-primary">Посмотреть каталог</a>
					</div>
				}
			</div>
		</div>
	</div>
</div>
